import{_ as a,c as e,o as i,a2 as s}from"./chunks/framework.Cto3-E3T.js";const g=JSON.parse('{"title":"api-render-vue","description":"","frontmatter":{},"headers":[],"relativePath":"api/index.md","filePath":"api/index.md"}'),t={name:"api/index.md"},r=s('<h1 id="api-render-vue" tabindex="-1">api-render-vue <a class="header-anchor" href="#api-render-vue" aria-label="Permalink to &quot;api-render-vue&quot;">​</a></h1><p><a href="https://github.com/jl15988/api-render-vue/blob/master/LICENSE" target="_blank" rel="noreferrer"><img src="https://img.shields.io/npm/l/api-render-vue?color=5470c6" alt="License"></a> <a href="https://www.npmjs.com/package/api-render-vue" target="_blank" rel="noreferrer"><img src="https://img.shields.io/npm/v/api-render-vue?color=91cc75" alt="Latest npm release"></a> <a href="https://www.npmjs.com/package/api-render-vue" target="_blank" rel="noreferrer"><img src="https://img.shields.io/npm/dm/api-render-vue.svg?label=npm%20downloads&amp;style=flat&amp;color=fac858" alt="NPM downloads"></a></p><p>一个 api 数据渲染组件，通过定义 api 项及各项配置，可实现自动异步获取 api 数据，然后通过值匹配名称渲染到页面，实现前端<code>字典</code>的统一管理，且不仅仅是字典</p><h2 id="优点" tabindex="-1">优点 <a class="header-anchor" href="#优点" aria-label="Permalink to &quot;优点&quot;">​</a></h2><ol><li>组件化，<a href="./.html">使用简单</a>，通过 vue 组件传入 api 的 id 及 value 即可自动<code>异步</code>获取数据且渲染</li><li><a href="./.html">统一模版</a>，通过配置统一模版可实现在页面中自动渲染指定组件，支持数据的双向绑定，实现组件统一配置，统一管理</li><li>数据缓存，每次使用数据优先使用缓存数据（相当于状态数据，不会保存到浏览器本地，如果浏览器刷新，则会重新获取），可配置缓存<code>有效期</code>，超期重新获取，或者手动刷新缓存</li><li>统一配置，可自定义各项配置及 api 项，便于维护</li></ol><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>npm 安装</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> api-render-vue</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span></span></code></pre></div><p>yarn 安装</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> api-render-vue</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span></span></code></pre></div><p>pnpm 安装</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> api-render-vue</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span></span></code></pre></div><h2 id="属性及api" tabindex="-1">属性及API <a class="header-anchor" href="#属性及api" aria-label="Permalink to &quot;属性及API&quot;">​</a></h2><p>见 <a href="./.html">属性文档</a> 或 <a href="https://jl15988.github.io/api-render-vue/" target="_blank" rel="noreferrer">API文档</a></p>',14),p=[r];function n(l,h,d,o,c,k){return i(),e("div",null,p)}const m=a(t,[["render",n]]);export{g as __pageData,m as default};
